---
import LayoutUser from "../layouts/LayoutUser.astro";
import { deleteReservation, getReservations } from "../services/ReservationService";
import { getReservationByStationId } from "../services/StationService";
import { getUser } from "../services/UserService";
import { Reservation } from "../types/ReservationTypes";
import {getSquare} from "../services/SquareService"
import { Station } from "../types/StationTypes";
import { Square } from "../types/SquareTypes";
const reservas = await getReservations();

if(Astro.cookies.get('id_user')?.value === undefined){
  return Astro.redirect('/login')
}

const deleteReservationId = async (id: string) =>{
    if(Astro.request.method === 'POST'){
        await deleteReservation(id)
    }
}
---

<LayoutUser>
  <div class="flex flex-col items-center gap-16">
    <div>
      <h1
        class="bg-pink-500 text-black font-extrabold rounded-full p-3 text-5xl px-10"
      >
        Reservas
      </h1>
    </div>
    <div>
      <table class="table-auto bg-white rounded-lg">
        <thead class="rounded-lg">
          <tr>
            <th class="px-4 py-2 text-lg">ID</th>
            <th class="px-4 py-2 text-lg">Fecha de la reserva</th>
            <th class="px-4 py-2 text-lg">Nombre de usuario</th>
            <th class="px-4 py-2 text-lg">Estacion</th>
            <th class="px-4 py-2 text-lg">Estado de la plaza</th>
            <th class="px-4 py-2 text-lg">Opciones</th>
          </tr>
        </thead>
        <tbody class="rounded-lg">
          {
            reservas.map(async (reserva: Reservation) => {
                const user = await getUser(reserva.id_user);
                const station: Station = await getReservationByStationId(reserva.id_square)
                const square: Square = await getSquare(reserva.id_square)
              return (
                <tr>
                  <td class="px-4 py-2 text-sm">{reserva._id}</td>
                  <td class="px-4 py-2 text-sm">{reserva.reservation_date}</td>
                  <td class="px-4 py-2 text-sm">{`${user?.name} ${user?.lastname}`}</td>
                  <td class="px-4 py-2 text-sm">{station[0].name_station}</td>
                  {square.state ? <td class="px-4 py-2 text-sm">Reservada</td> : <td class="px-4 py-2 text-sm">Libre</td>}
                  <td class="px-4 py-2 text-sm flex gap-5">
                    <form method="POST" class="flex gap-5">
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 24 24"
                      stroke-width="1.5"
                      stroke="currentColor"
                      class="w-6 h-6 text-sky-500 cursor-pointer"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        d="M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10"
                      />
                    </svg>
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 24 24"
                      stroke-width="1.5"
                      stroke="currentColor"
                      class="w-6 h-6 text-red-500 cursor-pointer"
                      onclick=`deleteReservationId(user._id)`
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        d="M19.5 12h-15"
                      />
                    </svg>
                    </form>
                  </td>
                </tr>
              );
            })
          }
        </tbody>
      </table>
    </div>
  </div>
</LayoutUser>
